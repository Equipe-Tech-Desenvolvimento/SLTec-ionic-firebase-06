 Autenticação e configuração do Guard
**************************************

1) Instalar dependências

    ng add @ngx-pwa/local-storage --> https://github.com/cyrilletuzi/angular-async-local-storage

2) Criar páginas de gestão de usuários

    ionic generate page user/login --spec=false
    ionic generate page user/logout --spec=false
    ionic generate page user/new --spec=false
    ionic generate page user/profile --spec=false
    ionic generate service services/app

3) Implementando o Guards

    Edite 'app/app-routing.module.ts' --> 1 à 9

4) Adicionar 'login' no menu principal

    Edite 'app/app.component.html' --> 1

5) Editar view de gestão de usuários

    Edite 'app/user/login/login.page.html' --> botão 'menu', '<ion-title>' e '<ion-content>' 
    Edite 'app/user/logout/logout.page.html' --> botão 'menu', '<ion-title>' e '<ion-content>' 
    Edite 'app/user/new/new.page.html' --> botão 'menu', '<ion-title>' e '<ion-content>' 
    Edite 'app/user/profile/profile.page.html' --> botão 'menu', '<ion-title>' e '<ion-content>'

6) Criar funcionalidades de login

    Editar 'app/service/app.service.ts' --> 1 à 3
    Editar 'app/user/login/login.page.ts' --> 1 à 5
    Editar 'app/user/login/login.page.html' --> 1
    Editar 'app/user/login/login.page.scss' --> 1

7) Criar funcionalidades de logout

    Editar 'app/user/logout/logout.page.ts' --> 1 à 3
    Editar 'app/user/logout/logout.page.html' --> 1

8) Exibir opções corretas no menu

    ionic generate service services/events
    Editar 'app/services/events.service' --> 1 à 4
    Editar 'app/app.component.ts' --> 1 à 5
    Editar 'app/user/login/login.page.ts' --> 6
    Editar 'app/user/logout/logout.page.ts' --> 4

EOF