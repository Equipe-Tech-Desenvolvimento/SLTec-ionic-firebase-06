{"version":3,"sources":["webpack:///src/app/user/login/login.page.html","webpack:///src/app/user/login/login-routing.module.ts","webpack:///src/app/user/login/login.module.ts","webpack:///src/app/user/login/login.page.scss","webpack:///src/app/user/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","fbAuth","fbStore","storage","app","router","events","provider","authProvider","GoogleAuthProvider","alert","signInWithPopup","then","data","userData","uid","user","displayName","email","photoURL","set","JSON","stringify","subscribe","next","publish","firestore","collection","doc","get","exists","userProfile","id","myAlert","navigate","error","console","log","selector","template"],"mappings":"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","file":"user-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Login / Entrar</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <h2>Olá!</h2>\\r\\n\\r\\n    <p>Para que você possa acessar os serviços deste aplicativo, é necessário estar logado(a)...</p>\\r\\n    <p>Escolha um método de entrada clicando no botão.</p>\\r\\n\\r\\n    <div class=\\\"login-table\\\">\\r\\n\\r\\n      <p>Entrar com:</p>&nbsp;\\r\\n\\r\\n      <!-- 3.1) Botões de login com redes sociais -->\\r\\n\\r\\n      <ion-button expand=\\\"block\\\" (click)=\\\"login('google')\\\">\\r\\n        <ion-icon name=\\\"logo-google\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Google</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('facebook')\\\">\\r\\n        <ion-icon name=\\\"logo-facebook\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Facebook</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('twitter')\\\">\\r\\n        <ion-icon name=\\\"logo-twitter\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Twitter</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('github')\\\">\\r\\n        <ion-icon name=\\\"logo-github\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>GitHub</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <!-- ... -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \"@charset \\\"UTF-8\\\";\\n/* 3.1) Formata lista de botões */\\n.login-table {\\n  display: table;\\n  margin: auto;\\n  width: 220px;\\n}\\n.login-table ion-label {\\n  padding-left: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCLGlDQUFBO0FBQ0E7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUFFSjtBQUNBO0VBQ0ksb0JBQUE7QUFFSiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyogMy4xKSBGb3JtYXRhIGxpc3RhIGRlIGJvdMO1ZXMgKi9cbi5sb2dpbi10YWJsZSB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiAyMjBweDtcbn1cblxuLmxvZ2luLXRhYmxlIGlvbi1sYWJlbCB7XG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// 3.1) Importa dependências \r\nimport { AngularFireAuth } from '@angular/fire/auth'; // Autenticação\r\nimport { auth } from 'firebase/app'; // Firebase CLI\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\nimport { AngularFirestore } from '@angular/fire/firestore'; // Firestore\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AppService } from '../../services/app.service'; // Serviços de uso geral\r\nimport { EventsService } from '../../services/events.service'; // Dispara eventos globais\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  // 3.2) Variáveis locais\r\n  authProvider: any; // Provedor de login social\r\n  userData: any; // Dados do login do usuário\r\n  userProfile: any; // Dados do perfil do usuário\r\n\r\n  constructor(\r\n\r\n    // 3.3) Injeção de dependências\r\n    public fbAuth: AngularFireAuth, // Autenticação\r\n    public fbStore: AngularFirestore, // Firestore\r\n    private storage: StorageMap, // Armazenamento local\r\n    public app: AppService, // Serviços de uso geral\r\n    public router: Router, // Roteamento\r\n    public events: EventsService, // Dispara eventos globais\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 3.4) Ação do botão de login\r\n  async login(provider: string) {\r\n\r\n    // Seleção do provedor de login social\r\n    // - Adicione outros provedores conforme a configuração do Firebase Authentication\r\n    switch (provider) {\r\n\r\n      case 'google':\r\n        this.authProvider = new auth.GoogleAuthProvider();\r\n        break;\r\n\r\n      case 'facebook':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.FacebookAuthProvider();\r\n        break;\r\n\r\n      case 'twitter':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.TwitterAuthProvider();\r\n        break;\r\n\r\n      case 'github':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.GithubAuthProvider();\r\n        break;\r\n\r\n      // case ....\r\n\r\n    }\r\n\r\n    // Login com popup no Firebase Auth\r\n    this.fbAuth.signInWithPopup(this.authProvider)\r\n\r\n      // Se logou\r\n      .then((data) => {\r\n\r\n        // Formata dados do usuário\r\n        this.userData = {\r\n          uid: data.user.uid,\r\n          displayName: data.user.displayName,\r\n          email: data.user.email,\r\n          photoURL: data.user.photoURL\r\n        }\r\n\r\n        // Salva no armazenamento local\r\n        this.storage.set('userData', JSON.stringify(this.userData)).subscribe({\r\n          next: () => {\r\n\r\n            // 3.6) Atualiza 'userData' no menu principal também (app.component.ts)\r\n            this.events.publish('userData', this.userData);\r\n\r\n            // Verifica se tem perfil no Firestore\r\n            this.fbStore.firestore.collection('users').doc(this.userData.uid).get()\r\n              .then((data) => {\r\n\r\n                // Se tem perfil\r\n                if (data.exists) {\r\n\r\n                  // Obtém dados do perfil\r\n                  this.userProfile = data.data();\r\n                  this.userProfile.uid = data.id;\r\n\r\n                  // Grava perfil no armazenamento local\r\n                  this.storage.set('userProfile', JSON.stringify(this.userProfile)).subscribe({\r\n                    next: () => {\r\n\r\n                      // Exibe alerta\r\n                      this.app.myAlert(\r\n                        `Olá ${this.userData.displayName}`,\r\n                        `Você já pode acessar todos os recursos do aplicativo.`\r\n                      );\r\n\r\n                      // Vai para a raiz\r\n                      this.router.navigate(['/']);\r\n                    },\r\n                    error: (error) => { console.error(error); }\r\n                  });\r\n\r\n                  // Se não tem perfil\r\n                } else {\r\n\r\n                  // 4.1) COMENTE --> Exibe alerta e vai para a rota '/user/new'\r\n                  // this.app.myAlert(\r\n                  //   `Olá ${this.userData.displayName}`,\r\n                  //   `Você precisa completar seu cadastro para usar todos os recursos do aplicativo.`\r\n                  // );\r\n\r\n                  // Vai para o cadatro de novo perfil\r\n                  this.router.navigate(['/user/new']);\r\n                }\r\n              })\r\n              .catch((error) => { console.error(error); });\r\n          },\r\n          error: (error) => { console.error(error); }\r\n        });\r\n      })\r\n      .catch((error) => { console.log(error); });\r\n  }\r\n}\r\n"]}