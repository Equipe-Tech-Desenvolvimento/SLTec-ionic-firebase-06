{"version":3,"sources":["webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/user/new/new.page.html","webpack:///src/app/components/profile/profile.component.scss","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/user/new/new-routing.module.ts","webpack:///src/app/user/new/new.module.ts","webpack:///src/app/user/new/new.page.scss","webpack:///src/app/user/new/new.page.ts"],"names":["ProfileComponent","formBuilder","storage","router","get","type","subscribe","data","navigate","userData","JSON","parse","profileFormCreate","profileForm","group","id","uid","name","displayName","compose","required","minLength","birth","over14Years","cpf","pattern","email","homePhone","cellPhone","whatsApp","status","console","log","control","value","split","year","month","day","today","Date","dateBirth","timeToTest","getTime","under14years","selector","template","routes","path","component","NewPageRoutingModule","imports","forChild","exports","NewPageModule","declarations","NewPage","app","myAlert"],"mappings":"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","file":"user-new-new-module-es5.js","sourcesContent":["export default \"<!-- 5.1) Só exibe form se estiver logado -->\\r\\n<div *ngIf=\\\"userData\\\">\\r\\n\\r\\n  <!-- 5.2) Cumprimenta usuário logado -->\\r\\n  <h2>Olá {{ userData.displayName }}!</h2>\\r\\n\\r\\n  <p>Você precisa cadastrar seu perfil para ter acesso aos recursos do aplicativo de forma pesonalizada.</p>\\r\\n  <p class=\\\"ion-text-center\\\"><small>\\r\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n    </small></p>\\r\\n\\r\\n  <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"profileSubmit()\\\">\\r\\n    <ion-input type=\\\"hidden\\\" id=\\\"id\\\" name=\\\"id\\\" formControlName=\\\"id\\\"></ion-input>\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" id=\\\"profileList\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <div>Dados pessoais:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nome completo:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.name.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"birth\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nascimento:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.birth.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.birth.errors.under14years\\\">* Deve ter 14 anos ou mais</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"date\\\" id=\\\"birth\\\" name=\\\"birth\\\" formControlName=\\\"birth\\\" placeholder=\\\"Exemplo: 27/11/1998\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cpf\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          CPF:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cpf.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cpf\\\" name=\\\"cpf\\\" formControlName=\\\"cpf\\\" placeholder=\\\"Somente números\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <hr>\\r\\n      <div>Contatos:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          E-mail:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.email.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.email\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"homePhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. residencial:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.homePhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"homePhone\\\" name=\\\"homePhone\\\" formControlName=\\\"homePhone\\\" placeholder=\\\"Exemplo: (21) 2345-6789\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cellPhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. celular:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cellPhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cellPhone\\\" name=\\\"cellPhone\\\" formControlName=\\\"cellPhone\\\" placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"whatsApp\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          WhatsApp:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.whatsApp.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-input type=\\\"text\\\" id=\\\"whatsApp\\\" name=\\\"whatsApp\\\" formControlName=\\\"whatsApp\\\" placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"profileForm.invalid\\\">Cadastrar perfil\\r\\n    </ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <!-- 4.1) <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons> -->\\r\\n\\r\\n    <!-- 4.2) Botão para voltar para a raiz -->\\r\\n    <ion-button slot=\\\"start\\\" routerLink=\\\"/\\\" fill=\\\"clear\\\">\\r\\n      <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n\\r\\n    <ion-title>Cadastro de Perfil</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <!-- 5.1) Inclui seletor do componente do formulário de perfil -->\\r\\n    <app-profile></app-profile>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","export default \"#profileList div {\\n  padding: 1rem;\\n  font-weight: bold;\\n  background: #575717;\\n}\\n\\n#profileList hr {\\n  border: none;\\n  padding: 0.5rem;\\n  margin: 0;\\n  background: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3Byb2ZpbGVMaXN0IGRpdiB7XHJcbiAgICBwYWRkaW5nICAgIDogMXJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgYmFja2dyb3VuZCA6IHJnYig4NywgODcsIDIzKTtcclxufVxyXG5cclxuI3Byb2ZpbGVMaXN0IGhyIHtcclxuICAgIGJvcmRlciAgICA6IG5vbmU7XHJcbiAgICBwYWRkaW5nICAgOiAuNXJlbTtcclxuICAgIG1hcmdpbiAgICA6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// 5.1) Importa dependências\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\n\r\n// 5.8) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  // 5.2) Cria formulário\r\n  public profileForm: FormGroup;\r\n\r\n  // 5.9) Variável com dados do usuário logado\r\n  userData: any;\r\n\r\n  constructor(\r\n\r\n    // 5.3) Injeta dependências\r\n    private formBuilder: FormBuilder,\r\n\r\n    // 5.10) Injeta dependências\r\n    public storage: StorageMap,\r\n    public router: Router\r\n  ) {\r\n\r\n    // 5.11) Obtém dados do usuário logado\r\n    this.storage.get('userData', { type: 'string' }).subscribe((data) => {\r\n\r\n      // 5.12) Se não logou, vai para a raiz\r\n      if (!data) this.router.navigate(['/']);\r\n\r\n      // 5.13) Dados do usuário logado\r\n      this.userData = JSON.parse(data);\r\n\r\n      // 5.4) Cria formulário\r\n      this.profileFormCreate();\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 5.6) Define campos do formulário e validações\r\n  profileFormCreate() {\r\n    this.profileForm = this.formBuilder.group({\r\n\r\n      id: [\r\n\r\n        // 5.14) Preenche o uid do perfil em 'id'\r\n        this.userData.uid\r\n      ],\r\n\r\n      name: [\r\n\r\n        // 5.15) Preenche o nome do perfil em 'name'\r\n        this.userData.displayName,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n      birth: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          this.over14Years\r\n        ])\r\n      ],\r\n      cpf: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\b\\d{11}\\b/g)\r\n        ])\r\n      ],\r\n\r\n      email: [\r\n\r\n        // 5.16) Preenche o email do perfil em 'email'\r\n        this.userData.email,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email\r\n        ])\r\n      ],\r\n      homePhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|8[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      cellPhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      whatsApp: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n\r\n      type: ['user'],\r\n      status: ['active']\r\n\r\n    });\r\n  }\r\n\r\n  // 5.6) Método que trata envio do formulário\r\n  profileSubmit() {\r\n    console.log('foi');\r\n  }\r\n\r\n  // 5.7) Método que valida data de nascimento\r\n  over14Years(control: AbstractControl) {\r\n    const birth = control.value;\r\n    if (birth) {\r\n      const [year, month, day] = birth.split('-');\r\n      const today = new Date();\r\n      const dateBirth = new Date(year, month, day, 0, 0, 0);\r\n      const timeToTest = 1000 * 60 * 60 * 24 * 365 * 14; // 14 anos em milissegundos...\r\n      if (today.getTime() - dateBirth.getTime() >= timeToTest) return null;\r\n    }\r\n    return { under14years: true };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NewPage } from './new.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NewPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewPageRoutingModule } from './new-routing.module';\r\n\r\nimport { NewPage } from './new.page';\r\n\r\n// 5.1) Importa dependências\r\nimport { ProfileComponent } from '../../components/profile/profile.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NewPageRoutingModule,\r\n\r\n    // 5.2) Injeta dependências\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    NewPage,\r\n\r\n    // 5.3) Declara componente importado\r\n    ProfileComponent,\r\n  ]\r\n})\r\nexport class NewPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbmV3L25ldy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// 4.1) Importa dependências \r\nimport { AppService } from '../../services/app.service';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\nexport class NewPage implements OnInit {\r\n\r\n  // 4.2) Variável com dados do login\r\n  userData: any;\r\n\r\n  constructor(\r\n\r\n    // 4.3) Injeta dependências\r\n    public app: AppService,\r\n    private storage: StorageMap,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // 4.4) Obtém dados do usuário logado\r\n    this.storage.get('userData', { type: 'string' }).subscribe(\r\n      (data) => {\r\n        this.userData = JSON.parse(data);\r\n\r\n        // 4.5) Exibe caixa de alerta\r\n        this.app.myAlert(\r\n          `Olá ${this.userData.displayName}`,\r\n          `Você precisa completar seu cadastro para usar todos os recursos do aplicativo.`\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}